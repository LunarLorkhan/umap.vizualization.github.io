{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/article/Spacer.svelte",
    "../src/article/Figure.svelte",
    "../src/article/Layout.svelte",
    "../src/visualizations/fmnist_visualization/components/VisualizationUMAP.svelte"
  ],
  "sourcesContent": [
    "<script>\n  /* Copyright 2019 Google LLC All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  ==============================================================================*/\n\n  export let height = 50;\n</script>\n\n<style>\n  div.spacer {\n    width: 100%;\n  }\n</style>\n\n<div class=\"spacer\" style=\"height: {height}px\" />\n",
    "<script>\n  /* Copyright 2019 Google LLC All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  ==============================================================================*/\n</script>\n\n<style>\n  @media only screen and (max-width: 800px) {\n    figure {\n      width: 100%;\n      margin-left: 0%;\n    }\n  }\n\n  @media only screen and (min-width: 800px) {\n    figure {\n      width: 110%;\n      margin-left: -5%;\n    }\n  }\n\n  figure {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-top: 18px;\n  }\n\n  .figure-container {\n    max-width: 1000px;\n    width: 100%;\n  }\n\n  caption {\n    margin: 20px 0;\n    font-style: italic;\n    width: 80%;\n    font-size: 13px;\n  }\n</style>\n\n<figure>\n  <div class=\"figure-container\">\n    <slot />\n  </div>\n  <caption>\n    <slot name=\"caption\" />\n  </caption>\n</figure>\n",
    "<script>\n  /* Copyright 2019 Google LLC All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  ==============================================================================*/\n</script>\n\n<style>\n  section {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .container {\n    max-width: 800px;\n    width: 100%;\n  }\n</style>\n\n<section>\n  <div class=\"container\">\n    <slot />\n  </div>\n</section>\n",
    "<script>\n  /* Copyright 2019 Google LLC All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  ==============================================================================*/\n\n  import { onMount } from \"svelte\";\n  import { loadData } from \"../js/load-data\";\n  import Color from \"color\";\n\n  let umapContainer;\n\n  let umapScatterGL;\n\n  let umapDataset;\n\n  let data;\n  let metadata;\n  let colorsByLabel;\n  let isLoaded = false;\n  let selectedLabelIndices = new Set();\n\n  let isOrbiting = true;\n\n  const onPointClick = i => {\n    const labelIndex = i === null ? null : metadata[i].labelIndex;\n    onCategoryClick(labelIndex)();\n    stopOrbitAnimations();\n  };\n\n  const stopOrbitAnimations = () => {\n    umapScatterGL.stopOrbitAnimation();\n  };\n\n  window._selectFmnistLabel = (e, label) => {\n    const labelIndex = data.labelNames.findIndex(l => {\n      return l.toLowerCase() === label;\n    });\n    if (labelIndex !== -1) {\n      onCategoryClick(labelIndex)(e);\n    }\n  };\n\n  const onCategoryClick = index => e => {\n    if (e && e.shiftKey) {\n      selectedLabelIndices.add(index);\n    } else {\n      if (selectedLabelIndices.has(index) || index === null) {\n        selectedLabelIndices.clear();\n      } else {\n        selectedLabelIndices.clear();\n        selectedLabelIndices.add(index);\n      }\n    }\n\n    // Necessary to force a rerender of the category labels\n    selectedLabelIndices = selectedLabelIndices;\n\n    if (selectedLabelIndices.size === 0) return setDefaultPointColorer();\n\n    [umapScatterGL].forEach(scatterGl => {\n      scatterGl.setPointColorer(i => {\n        const labelIndex = metadata[i].labelIndex;\n        return selectedLabelIndices.has(labelIndex)\n          ? colorsByLabel[labelIndex].string()\n          : \"white\";\n      });\n    });\n  };\n\n  const setDefaultPointColorer = () => {\n    [umapScatterGL].forEach(scatterGl => {\n      scatterGl.setPointColorer(i => {\n        const labelIndex = metadata[i].labelIndex;\n        return colorsByLabel[labelIndex].string();\n      });\n    });\n  };\n\n  const getBackgroundColor = (labelIndex, selectedLabelIndices) => {\n    const isSelected = selectedLabelIndices.has(labelIndex);\n    const noneSelected = selectedLabelIndices.size === 0;\n    const color = colorsByLabel[labelIndex];\n    return isSelected || noneSelected\n      ? color.string()\n      : color.lighten(0.35).string();\n  };\n\n  const toggleOrbit = () => {\n    isOrbiting = true;\n    [umapScatterGL].forEach(scatterGl => {\n      scatterGl.startOrbitAnimation();\n    });\n  };\n\n  onMount(async () => {\n    data = await loadData();\n    isLoaded = true;\n\n    metadata = [];\n    const umapPoints = [];\n\n    data.umapProjection.forEach((vector, index) => {\n      const labelIndex = data.labels[index];\n      umapPoints.push([vector[2], vector[0], vector[1]]);\n      metadata.push({\n        labelIndex,\n        label: data.labelNames[labelIndex]\n      });\n    });\n\n    const dataset = {\n      dimensions: 3,\n      metadata,\n      spriteMetadata: {\n        spriteImage: \"spritesheet.png\",\n        singleSpriteSize: [28, 28]\n      }\n    };\n\n    umapDataset = {\n      ...dataset,\n      points: umapPoints\n    };\n\n\n    colorsByLabel = [...new Array(10)].map((_, i) => {\n      let hue = Math.floor((360 / 10) * i);\n      return new Color({ h: hue, s: 100, l: 70 });\n    });\n\n    const onCameraMove = () => {\n      if (isOrbiting) isOrbiting = false;\n      stopOrbitAnimations();\n    };\n\n    const scatterGLOptions = {\n      renderMode: \"SPRITE\",\n      selectEnabled: false,\n      onClick: onPointClick,\n      onCameraMove\n    };\n\n    umapScatterGL = new ScatterGL(umapContainer, {\n      ...scatterGLOptions,\n      camera: { zoom: 1.2 },\n    });\n    setDefaultPointColorer();\n\n    umapScatterGL.render(umapDataset);\n  });\n</script>\n\n<style>\n  .container {\n    position: relative;\n    width: 100%;\n    min-height: 500px;\n  }\n\n  @media only screen and (max-width: 800px) {\n    .container {\n      min-height: 400px;\n    }\n  }\n\n  .scatter-gl-container {\n    height: 100%;\n    position: absolute;\n    width: 50%;\n    top: 0;\n  }\n\n  .umap-container {\n    left: 50%;\n    transform: translateX(-50%);\n    width: 70%;\n  }\n\n  .categories {\n    width: 100%;\n    position: absolute;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    bottom: 0;\n  }\n\n  .category {\n    cursor: pointer;\n    margin: 2px;\n    padding: 8px;\n    user-select: none;\n    color: #333;\n  }\n\n  .category.selected {\n    /*font-weight: 800;*/\n    outline: 1px solid #000;\n  }\n\n  .category:hover {\n    text-decoration: underline;\n  }\n\n  .projection-types {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    font-weight: 600;\n    user-select: none;\n  }\n\n  .orbit {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    cursor: pointer;\n  }\n  .orbit:hover {\n    color: #333;\n  }\n\n  @media only screen and (max-width: 800px) {\n    .orbit {\n      top: 0;\n    }\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"scatter-gl-container umap-container\" bind:this={umapContainer} />\n  <div class=\"projection-types\">\n    <div class=\"projection-type-umap\">UMAP</div>\n  </div>\n  <div class=\"categories\">\n    {#if isLoaded}\n      {#each data.labelNames as labelName, labelIndex}\n        <div\n          class=\"category {selectedLabelIndices.has(labelIndex) ? 'selected' : ''}\"\n          style=\"background-color: {getBackgroundColor(labelIndex, selectedLabelIndices)}\"\n          on:click={onCategoryClick(labelIndex)}>\n          {labelName}\n        </div>\n      {/each}\n    {/if}\n  </div>\n  {#if !isOrbiting}\n    <div class=\"orbit\" on:click={toggleOrbit}>\n      <i class=\"material-icons\">3d_rotation</i>\n    </div>\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}